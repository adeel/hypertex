#!/usr/bin/env python2

import os, os.path, sys
import shutil
import codecs
from optparse import OptionParser
import hypertex

if __name__ == "__main__":
  op = OptionParser()

  op.add_option("-i", "--input", dest="infile",
    help="input file")
  op.add_option("-f", "--format", dest="format",
    help="output format (tex or html)")
  op.add_option("--srcdir", dest="src_dir",
    help="directory containing hypertex files that will be available for linking")
  op.add_option("--srcurl", dest="src_base_url",
    help="the base url where srcdir can be accessed")
  op.add_option("--imgdir", dest="img_dir",
    help="for html output, a path to a dir where images will be saved")
  op.add_option("--imgurl", dest="img_base_url",
    help="for html output, the base url to prepend to image paths")

  (options, args) = op.parse_args()

  if not options.infile or not os.path.isfile(options.infile):
    op.error("Please enter a valid input file.")
  if not options.format:
    op.error("Please enter an output format.")

  format = options.format
  if format not in ["tex", "html"]:
    op.error("Please choose a valid output format (tex or html).")

  try:
    input = codecs.open(options.infile, encoding="utf8", mode="r").read()
  except IOError:
    op.error("Unable to open the file: %s" % options.infile)

  src_dir = os.path.abspath("./")
  if options.src_dir:
    src_dir = os.path.abspath(options.src_dir)
  img_dir = None
  if options.img_dir:
    img_dir = os.path.abspath(options.img_dir)

  cwd = os.getcwd()
  # this is so that opening other src files will work correctly...
  os.chdir(os.path.dirname(options.infile))

  if format == "html":
    output = hypertex.render_html(input,
      {"src_dir": src_dir},
      {"img_dir": img_dir, "img_base_url": options.img_base_url,
       "src_base_url": options.src_base_url})
  elif format == "tex":
    output = hypertex.render_tex(input,
      {"src_dir": src_dir},
      {"src_base_url": options.src_base_url})

  os.chdir(cwd)
  output = output.encode("utf8", "ignore")
  sys.stdout.write(output)
